{
  "EDITOR_STATE": {
    "allProjectFiles": {
      "d49f6f6f-2501-4953-b356-a07287f1c41b": {
        "id": "d49f6f6f-2501-4953-b356-a07287f1c41b",
        "parent": null,
        "name": "test",
        "type": "DIRECTORY",
        "isDirectory": true,
        "children": [
          "6289acab-1bda-4531-867b-3494a3e30ae7"
        ],
        "isRemovable": false,
        "filePath": "test"
      },
      "6289acab-1bda-4531-867b-3494a3e30ae7": {
        "id": "6289acab-1bda-4531-867b-3494a3e30ae7",
        "parent": "d49f6f6f-2501-4953-b356-a07287f1c41b",
        "name": "lambda.js",
        "type": "JS_LAMBDA",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "test/lambda.js",
        "code": "let AWS = require('aws-sdk');\nlet SL_AWS = require('slappforge-sdk-aws');\nconst sqs = new SL_AWS.SQS(AWS);\n\nexports.handler = function (event, context, callback) {\n    sqs.sendMessage({\n        MessageBody: 'm',\n        QueueUrl: `https://sqs.${process.env.AWS_REGION}.amazonaws.com/${process.env.SIGMA_AWS_ACC_ID}/check`,\n        DelaySeconds: '0',\n        MessageAttributes: {}\n    }, function (data) {\n         console.log(\"Success\");\n                 console.log( data );\n        // your logic (logging etc) to handle successful message delivery, should be here\n    }, function (error) {\n         console.log(\"not Success\");\n                 console.log( error );\n        // your logic (logging etc) to handle failures, should be here\n    });\n\n\n\n    callback(null, { \"message\": \"Successfully executed ex put\" });\n}",
        "config": {
          "runtime": "nodejs8.10",
          "handler": "handler",
          "timeout": 60,
          "memory": 128,
          "layers": []
        },
        "triggers": [
          {
            "resourceName": "apigeuCentral1checkindunilqatstany",
            "config": {}
          }
        ],
        "testCases": {
          "6cf1f70e-5b5e-45d6-82d4-10680aaee482": {
            "id": "6cf1f70e-5b5e-45d6-82d4-10680aaee482",
            "name": "Unnamed event",
            "functionId": "6289acab-1bda-4531-867b-3494a3e30ae7",
            "event": "{\n    \"key1\": \"value1\",\n    \"key2\": \"value2\",\n    \"key3\": \"value3\"\n}"
          }
        }
      }
    },
    "deletedFiles": [],
    "rootNode": "d49f6f6f-2501-4953-b356-a07287f1c41b",
    "openFiles": [
      "6289acab-1bda-4531-867b-3494a3e30ae7"
    ],
    "currentFileId": "6289acab-1bda-4531-867b-3494a3e30ae7",
    "resources": {
      "apigeuCentral1checkindunilqatstany": {
        "name": "apigeuCentral1checkindunilqatstany",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "eu-central-1",
          "apiMode": 0,
          "apiName": "check",
          "endpointType": "REGIONAL",
          "resourceMode": 0,
          "resourceName": "indunil/qa/tst",
          "resourcePath": "/indunil/qa/tst",
          "restMethod": "ANY",
          "proxyIntegration": false,
          "enableCORS": false,
          "stageMode": 0,
          "stageName": "test",
          "mode": 0
        }
      },
      "sqscheck": {
        "name": "sqscheck",
        "type": "SQS",
        "config": {
          "mode": 0,
          "existing": false,
          "name": "check",
          "url": "https://sqs.eu-central-1.amazonaws.com/318300609668/check",
          "selectedRegion": "eu-central-1",
          "deliveryDelay": 0,
          "deliveryDelayUnit": "seconds",
          "useRedrivePolicy": false,
          "useSSE": false,
          "kmsCustomerMasterKey": "default",
          "accountId": "318300609668",
          "dataKeyReusePeriod": 5,
          "queueType": "standardQueue",
          "defaultVisibilityTimeout": 30,
          "defaultVisibilityTimeoutUnit": "seconds",
          "messageRetentionPeriod": 4,
          "messageRetentionPeriodUnit": "days",
          "maximumMessageSize": 256,
          "receiveMessageWaitTime": 0,
          "deadLetterQueueName": "",
          "contentBasedDeduplication": false
        }
      }
    },
    "customTemplate": {
      "dialect": "CloudFormation",
      "definitions": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "This template creates the stack for project test. Generated by Sigma",
        "Outputs": {
          "apigcheckindunilqatstANY": {
            "Description": "ANY endpoint for resource /indunil/qa/tst on API check",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "apigcheck"
                  },
                  ".execute-api.",
                  "eu-central-1",
                  ".amazonaws.com/",
                  "test",
                  "/",
                  "indunil/qa/tst"
                ]
              ]
            }
          },
          "sqstest": {
            "Description": "URL of SQS queue test",
            "Value": {
              "Ref": "sqstest"
            }
          }
        },
        "Resources": {
          "apigcheck": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Description": "An API generated by Sigma",
              "Name": "check",
              "EndpointConfiguration": {
                "Types": [
                  "REGIONAL"
                ]
              }
            }
          },
          "apigcheckindunil": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "RestApiId": {
                "Ref": "apigcheck"
              },
              "ParentId": {
                "Fn::GetAtt": [
                  "apigcheck",
                  "RootResourceId"
                ]
              },
              "PathPart": "indunil"
            }
          },
          "apigcheckindunilqa": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "RestApiId": {
                "Ref": "apigcheck"
              },
              "ParentId": {
                "Ref": "apigcheckindunil"
              },
              "PathPart": "qa"
            }
          },
          "apigcheckindunilqatst": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "RestApiId": {
                "Ref": "apigcheck"
              },
              "ParentId": {
                "Ref": "apigcheckindunilqa"
              },
              "PathPart": "tst"
            }
          },
          "apigcheckindunilqatstANY": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "RestApiId": {
                "Ref": "apigcheck"
              },
              "ResourceId": {
                "Ref": "apigcheckindunilqatst"
              },
              "HttpMethod": "ANY",
              "AuthorizationType": "NONE",
              "MethodResponses": [
                {
                  "StatusCode": "200"
                }
              ],
              "Integration": {
                "Type": "AWS",
                "IntegrationHttpMethod": "POST",
                "Uri": {
                  "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${testlambda.Arn}/invocations"
                },
                "IntegrationResponses": [
                  {
                    "StatusCode": "200"
                  }
                ]
              }
            }
          },
          "sqstest": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
              "DelaySeconds": 0,
              "MaximumMessageSize": 262144,
              "MessageRetentionPeriod": 345600,
              "QueueName": "test",
              "ReceiveMessageWaitTimeSeconds": 0,
              "VisibilityTimeout": 30
            }
          },
          "testlambda": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "FunctionName": "testlambda",
              "Description": "Invokes functions defined in test/lambda.js in project test. Generated by Sigma.",
              "Code": {
                "S3Bucket": "com.sigma.test.318300609668.indunil.eu-central-1",
                "S3Key": "test/sigma_builds/build_1562660414796.zip"
              },
              "MemorySize": 128,
              "Handler": "test/lambda.handler",
              "Timeout": 60,
              "Runtime": "nodejs8.10",
              "Layers": [],
              "Role": {
                "Fn::GetAtt": [
                  "testlambdaExecutionRole",
                  "Arn"
                ]
              },
              "Environment": {
                "Variables": {
                  "SIGMA_AWS_ACC_ID": "318300609668"
                }
              }
            }
          },
          "testlambdaExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "ManagedPolicyArns": [
                "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ],
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Action": [
                      "sts:AssumeRole"
                    ],
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    }
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "testlambdaPolicy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sqs:ReceiveMessage"
                        ],
                        "Resource": {
                          "Fn::GetAtt": [
                            "sqstest",
                            "Arn"
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          "apigcheckindunilqatstANYPermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "Action": "lambda:InvokeFunction",
              "FunctionName": {
                "Ref": "testlambda"
              },
              "SourceArn": {
                "Fn::Sub": [
                  "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/*/${__Method__}${__Path__}",
                  {
                    "__Method__": "*",
                    "__Path__": "/indunil/qa/tst",
                    "__ApiId__": {
                      "Ref": "apigcheck"
                    }
                  }
                ]
              },
              "Principal": "apigateway.amazonaws.com"
            }
          },
          "apigcheckDeployment1562660846957": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "apigcheck"
              },
              "Description": "An API deployment generated by Sigma for API check",
              "StageName": "test"
            },
            "DependsOn": [
              "apigcheckindunilqatstANY"
            ]
          }
        }
      }
    },
    "envVariables": [
      {
        "lambdaId": "all",
        "varKey": "SIGMA_AWS_ACC_ID",
        "varValue": null,
        "shouldPersist": false,
        "displayOnly": false,
        "editable": false
      }
    ],
    "packageJSON": {
      "dependencies": {
        "aws-sdk": {
          "name": "aws-sdk",
          "language": "javascript",
          "version": "2.176.0",
          "dev": true,
          "notRemovable": false
        },
        "slappforge-sdk-aws": {
          "name": "slappforge-sdk-aws",
          "language": "javascript",
          "version": "0.0.5",
          "dev": false,
          "notRemovable": false
        }
      }
    }
  },
  "PROJECT_META": {
    "projectName": "test",
    "projectDescription": "wet",
    "projectVersion": "1.0.0",
    "projectRegion": "eu-central-1",
    "platform": "AWS",
    "platformRegions": {},
    "lastSave": 1562676324616
  },
  "VCS_STATE": {
    "provider": "GitHub",
    "repo": {
      "name": "test",
      "url": "https://github.com/Indunil1992/test"
    }
  }
}